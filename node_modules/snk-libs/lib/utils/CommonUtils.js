'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RandomUtils = exports.NumberUtils = exports.ArrayUtils = undefined;

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * Copyright (c) 2014-2017. JarkimZhu
 * This software can not be used privately without permission
 */

/**
 * @version 0.0.1-SNAPSHOT
 * @author JarkimZhu
 * Created on 2015/12/11.
 * @class
 */
var ArrayUtils = function () {
  function ArrayUtils() {
    (0, _classCallCheck3.default)(this, ArrayUtils);
  }

  (0, _createClass3.default)(ArrayUtils, null, [{
    key: 'remove',
    value: function remove(arr, toRemove) {
      if (isNaN(toRemove)) {
        for (var i = arr.length - 1; i >= 0; i -= 1) {
          if (arr[i] === toRemove) {
            arr.splice(i, 1);
            break;
          }
        }
      } else {
        arr.splice(toRemove, 1);
      }
      return arr;
    }
  }, {
    key: 'removeAll',
    value: function removeAll(arr) {
      for (var i = (arguments.length <= 1 ? 0 : arguments.length - 1) - 1; i >= 0; i -= 1) {
        var index = arguments.length <= i + 1 ? undefined : arguments[i + 1];
        arr.splice(index, 1);
      }
      return arr;
    }
  }, {
    key: 'contains',
    value: function contains(arr, value) {
      var index = ArrayUtils.indexOf(arr, value);
      return index !== -1;
    }
  }, {
    key: 'indexOf',
    value: function indexOf(arr, value) {
      for (var i = arr.length - 1; i >= 0; i -= 1) {
        if (arr[i] === value) {
          return i;
        }
      }
      return -1;
    }
  }]);
  return ArrayUtils;
}();

var NumberUtils = function () {
  function NumberUtils() {
    (0, _classCallCheck3.default)(this, NumberUtils);
  }

  (0, _createClass3.default)(NumberUtils, null, [{
    key: 'toFixed',
    value: function toFixed(num, scale) {
      if (num && typeof num === 'number') {
        var fixStr = num.toFixed(scale);
        if (scale === 0) {
          return parseInt(fixStr, 0);
        }
        return parseFloat(fixStr);
      }
      return num;
    }
  }]);
  return NumberUtils;
}();

var RandomUtils = function () {
  function RandomUtils() {
    (0, _classCallCheck3.default)(this, RandomUtils);
  }

  (0, _createClass3.default)(RandomUtils, null, [{
    key: 'random',
    value: function random(n, charTable) {
      var r = new Array(n);
      var table = charTable;
      if (!charTable) {
        table = RandomUtils._DEFAULT_CHAR_TABLE;
      }
      var length = table.length;
      for (var i = 0; i < n; i += 1) {
        var index = Math.round(Math.random() * length);
        r[i] = table.charAt(index);
      }
      return r.join('');
    }
  }, {
    key: 'randomInt',
    value: function randomInt(n) {
      var r = new Array(n);
      for (var i = 0; i < n; i += 1) {
        var num = Math.round(Math.random() * n);
        r[i] = num;
      }
      return parseInt(r.join(''), 0);
    }
  }]);
  return RandomUtils;
}();

RandomUtils._DEFAULT_CHAR_TABLE = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
exports.ArrayUtils = ArrayUtils;
exports.NumberUtils = NumberUtils;
exports.RandomUtils = RandomUtils;